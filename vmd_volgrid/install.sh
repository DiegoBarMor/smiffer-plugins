#!/bin/bash
# VMD Volgrid Plugin Installation Script for Linux/macOS

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PLUGIN_NAME="smiffer1.0"

echo "VMD Volgrid Plugin Installer"
echo "============================"

# Check if we're in the correct directory
if [ ! -f "vmd_smiffer.tcl" ]; then
    echo "Error: Must run from vmd_volgrid directory"
    exit 1
fi

# Function to find VMD plugin directory
find_vmd_plugin_dir() {
    local vmd_plugin_dir=""

    # Try different common locations
    if [[ -n "$VMDDIR" ]]; then
        vmd_plugin_dir="$VMDDIR/plugins/noarch/tcl"
    elif [[ -d "/usr/local/lib/vmd/plugins/noarch/tcl" ]]; then
        vmd_plugin_dir="/usr/local/lib/vmd/plugins/noarch/tcl"
    elif [[ -d "/opt/vmd/plugins/noarch/tcl" ]]; then
        vmd_plugin_dir="/opt/vmd/plugins/noarch/tcl"
    elif [[ -d "/Applications/VMD.app/Contents/vmd/plugins/noarch/tcl" ]]; then
        vmd_plugin_dir="/Applications/VMD.app/Contents/vmd/plugins/noarch/tcl"
    else
        # Fall back to user plugins directory
        local user_vmd_plugins="$HOME/.vmd/plugins"
        if [[ ! -d "$user_vmd_plugins" ]]; then
            mkdir -p "$user_vmd_plugins"
            echo "Created user VMD plugins directory: $user_vmd_plugins"
        fi
        vmd_plugin_dir="$user_vmd_plugins"
    fi

    echo "$vmd_plugin_dir"
}

# Function to install plugin
install_plugin() {
    local vmd_plugin_dir="$1"
    local plugin_dir="$vmd_plugin_dir/vmd_smiffer"

    echo "Installing to: $plugin_dir"

    # Create plugin directory
    if [[ ! -d "$plugin_dir" ]]; then
        mkdir -p "$plugin_dir"
        echo "Created plugin directory: $plugin_dir"
    fi

    # Copy plugin files
    local files=("vmd_smiffer.tcl" "pkgIndex.tcl")
    for file in "${files[@]}"; do
        if [[ -f "$SCRIPT_DIR/$file" ]]; then
            cp "$SCRIPT_DIR/$file" "$plugin_dir/"
            echo "Copied $file"
        else
            echo "Warning: $file not found in current directory"
        fi
    done

    rm -rf volgrids
    git clone https://github.com/DiegoBarMor/volgrids.git
    if command -v python3 &> /dev/null; then
        echo "Installing volgrids dependencies..."
        pip install -r volgrids/environment/requirements.txt
    fi

    { echo "[VOLGRIDS]"; echo "OUTPUT_FORMAT=vg.GridFormat.MRC"; } > "$plugin_dir/default_config.ini"
    mv volgrids "$plugin_dir/volgrids-main"
    echo "Moved volgrids-main directory to $plugin_dir"

    # Configure VMD startup script
    configure_vmdrc "$plugin_dir"

    echo "Plugin installed successfully!"
    echo "The plugin will be available in VMD after restart."
    echo "Look for 'Smiffer' in the Extensions menu or use 'vmd_smiffer_tk' command to open the GUI"
}

# Function to configure VMD startup script
configure_vmdrc() {
    local plugin_dir="$1"
    local vmd_rc="$HOME/.vmdrc"
    local plugin_load_line="lappend auto_path $plugin_dir"

    if [[ ! -f "$vmd_rc" ]]; then
        echo "Creating $vmd_rc"
        cat > "$vmd_rc" << EOF
# VMD startup script
# Auto-generated by vmd_smiffer plugin installer

# Enable main menu
menu main on

# Add vmd_smiffer plugin to auto path
$plugin_load_line

# Load vmd_smiffer plugin
package require vmd_smiffer
EOF
    else
        # Check if main menu is already enabled
        if ! grep -q "menu main on" "$vmd_rc"; then
            echo "Adding 'menu main on' to existing $vmd_rc"
            # Create a temporary file with the new content
            temp_file=$(mktemp)

            # Add menu main on at the beginning (after any existing comments)
            {
                # Copy existing comments at the top
                grep "^#" "$vmd_rc" 2>/dev/null || true
                echo ""
                echo "# Enable main menu"
                echo "menu main on"
                echo ""
                # Copy non-comment lines
                grep -v "^#" "$vmd_rc" 2>/dev/null || true
            } > "$temp_file"

            # Replace the original file
            mv "$temp_file" "$vmd_rc"
        else
            echo "'menu main on' already present in $vmd_rc"
        fi

        # Check if plugin is already configured
        if ! grep -q "vmd_smiffer" "$vmd_rc"; then
            echo "Adding vmd_smiffer plugin to existing $vmd_rc"
            echo "" >> "$vmd_rc"
            echo "# VMD Smiffer plugin" >> "$vmd_rc"
            echo "$plugin_load_line" >> "$vmd_rc"
            echo "package require vmd_smiffer" >> "$vmd_rc"
        else
            echo "VMD Smiffer plugin already configured in $vmd_rc"
        fi
    fi

    echo "VMD startup script configured: $vmd_rc"
}

# Function to check dependencies
check_dependencies() {
    echo "Checking dependencies..."

    # Check for Python 3
    if ! command -v python3 &> /dev/null; then
        echo "Warning: Python 3 not found. Required for smiffer."
    else
        echo "Python 3: $(python3 --version)"
    fi

    # Check for APBS (optional)
    if ! command -v apbs &> /dev/null; then
        echo "APBS: Not found (optional for electrostatic calculations)"
    else
        echo "APBS: $(timeout 0.1 apbs --version 2>&1 | head -1)"
        rm -f "io.mc"
    fi

    # Check for pdb2pqr (optional)
    if ! command -v pdb2pqr &> /dev/null; then
        echo "pdb2pqr: Not found (optional for APBS preparation)"
    else
        echo "pdb2pqr: Available"
    fi
}

# Function to show manual installation instructions
show_manual_instructions() {
    echo "Manual Installation Instructions:"
    echo "================================"
    echo "1. Copy the following files to your VMD plugin directory:"
    echo "   - vmd_smiffer.tcl"
    echo "   - pkgIndex.tcl"
    echo ""
    echo "2. VMD plugin directory locations:"
    echo "   - Linux: \$VMDDIR/plugins/noarch/tcl/smiffer1.0/"
    echo "   - macOS: /Applications/VMD.app/Contents/vmd/plugins/noarch/tcl/smiffer1.0/"
    echo ""
    echo "3. Create the smiffer1.0 directory if it doesn't exist"
    echo "4. Restart VMD"
    echo "5. Use 'vmd_smiffer_tk' command to open the GUI"
}

# Main installation logic
main() {
    case "${1:-install}" in
        "install")
            check_dependencies
            echo ""
            vmd_plugin_dir=$(find_vmd_plugin_dir)
            install_plugin "$vmd_plugin_dir"
            ;;
        "check")
            check_dependencies
            ;;
        "manual")
            show_manual_instructions
            ;;
        *)
            echo "Usage: $0 [install|check|manual]"
            echo "  install - Install the plugin automatically (default)"
            echo "  check   - Check dependencies only"
            echo "  manual  - Show manual installation instructions"
            exit 1
            ;;
    esac
}

main "$@"
